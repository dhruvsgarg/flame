{
    "taskid": "505f9fc483cf4df68a2409257b5fad7d3c580661",
    "backend": "mqtt",
    "brokers": [
        {
            "host": "localhost",
            "sort": "mqtt"
        },
        {
            "host": "localhost:10104",
            "sort": "p2p"
        }
    ],
    "groupAssociation": {
        "param-channel": "default"
    },
    "channels": [
        {
            "description": "Model update is sent from trainer to aggregator and vice-versa",
            "groupBy": {
                "type": "tag",
                "value": [
                    "default"
                ]
            },
            "name": "param-channel",
            "pair": [
                "trainer",
                "aggregator"
            ],
            "funcTags": {
                "aggregator": [
                    "distribute",
                    "aggregate"
                ],
                "trainer": [
                    "fetch",
                    "upload"
                ]
            }
        }
    ],
    "dataset": "https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz",
    "dependencies": [
        "numpy >= 1.2.0"
    ],
    "hyperparameters": {
        "batchSize": 32,
        "learningRate": 0.04,
        "rounds": 5,
        "trainer_indices_list": [
            12336,
            6031,
            33257,
            8809,
            28535,
            15776,
            38157,
            6765,
            44674,
            38892,
            3238,
            4458,
            15832,
            28688,
            5433,
            39102,
            14764,
            2038,
            36935,
            24462,
            44423,
            34164,
            43854,
            42834,
            19002,
            49769,
            10992,
            3085,
            33271,
            32601,
            32603,
            33237,
            16258,
            46233,
            4533,
            40972,
            5392,
            43911,
            41489,
            23156,
            16180,
            34400,
            46376,
            9442,
            12946,
            7777,
            38211,
            49977,
            17640,
            41781,
            4357,
            46064,
            37293,
            18227,
            15999,
            27217,
            34868,
            15325,
            30401,
            41704,
            16021,
            46898,
            29881,
            11514
        ],
        "heartbeats": {
            "enabled": "False",
            "frequency_s": 1
        },
        "use_oort_loss_fn": "True",
        "training_delay_enabled": "True",
        "training_delay_s": "19.0",
        "avl_events_mobiperf_3st_50": "[(0, 'AVL_TRAIN'), (300, 'UN_AVL'), (62747, 'AVL_EVAL'), (62747, 'AVL_TRAIN'), (76089, 'AVL_EVAL'), (284673, 'UN_AVL')]",
        "avl_events_mobiperf_3st_75": "[(0, 'AVL_TRAIN'), (300, 'UN_AVL'), (62747, 'AVL_EVAL'), (62747, 'AVL_TRAIN'), (76089, 'AVL_EVAL'), (180215, 'UN_AVL')]",
        "avl_events_mobiperf_2st": "[(0, 'AVL_TRAIN'), (300, 'UN_AVL'), (62747, 'AVL_TRAIN'), (76089, 'UN_AVL')]",
        "client_notify": {
            "enabled": "False",
            "trace": "syn_0"
        },
        "wait_until_next_avl": "True",
        "avl_events_syn_0": "[(0, 'AVL_TRAIN')]",
        "avl_events_syn_20": "[(0, 'AVL_TRAIN'), (9600, 'UN_AVL'), (10200, 'AVL_TRAIN'), (16200, 'UN_AVL'), (16800, 'AVL_TRAIN'), (19200, 'UN_AVL'), (19800, 'AVL_TRAIN'), (20400, 'UN_AVL'), (21000, 'AVL_TRAIN'), (31800, 'UN_AVL'), (32400, 'AVL_TRAIN'), (33000, 'UN_AVL'), (33600, 'AVL_TRAIN'), (40200, 'UN_AVL'), (40800, 'AVL_TRAIN'), (41400, 'UN_AVL'), (42000, 'AVL_TRAIN'), (42600, 'UN_AVL'), (43800, 'AVL_TRAIN'), (45600, 'UN_AVL'), (46200, 'AVL_TRAIN'), (52800, 'UN_AVL'), (54000, 'AVL_TRAIN'), (61800, 'UN_AVL'), (62400, 'AVL_TRAIN'), (69600, 'UN_AVL'), (70200, 'AVL_TRAIN'), (73200, 'UN_AVL'), (73800, 'AVL_TRAIN'), (79200, 'UN_AVL'), (79800, 'AVL_TRAIN'), (82800, 'UN_AVL'), (83400, 'AVL_TRAIN'), (84000, 'UN_AVL'), (84600, 'AVL_TRAIN'), (86400, 'UN_AVL')]",
        "avl_events_syn_50": "[(0, 'AVL_TRAIN'), (2400, 'UN_AVL'), (3000, 'AVL_TRAIN'), (4200, 'UN_AVL'), (4800, 'AVL_TRAIN'), (6600, 'UN_AVL'), (7200, 'AVL_TRAIN'), (9600, 'UN_AVL'), (10200, 'AVL_TRAIN'), (10800, 'UN_AVL'), (11400, 'AVL_TRAIN'), (12000, 'UN_AVL'), (13200, 'AVL_TRAIN'), (13800, 'UN_AVL'), (16800, 'AVL_TRAIN'), (17400, 'UN_AVL'), (18000, 'AVL_TRAIN'), (18600, 'UN_AVL'), (21600, 'AVL_TRAIN'), (22200, 'UN_AVL'), (22800, 'AVL_TRAIN'), (23400, 'UN_AVL'), (24600, 'AVL_TRAIN'), (25800, 'UN_AVL'), (28200, 'AVL_TRAIN'), (28800, 'UN_AVL'), (29400, 'AVL_TRAIN'), (31800, 'UN_AVL'), (33600, 'AVL_TRAIN'), (34800, 'UN_AVL'), (35400, 'AVL_TRAIN'), (36000, 'UN_AVL'), (37800, 'AVL_TRAIN'), (40200, 'UN_AVL'), (40800, 'AVL_TRAIN'), (41400, 'UN_AVL'), (45000, 'AVL_TRAIN'), (45600, 'UN_AVL'), (48600, 'AVL_TRAIN'), (50400, 'UN_AVL'), (51600, 'AVL_TRAIN'), (52800, 'UN_AVL'), (54000, 'AVL_TRAIN'), (54600, 'UN_AVL'), (55200, 'AVL_TRAIN'), (55800, 'UN_AVL'), (57000, 'AVL_TRAIN'), (58200, 'UN_AVL'), (58800, 'AVL_TRAIN'), (60000, 'UN_AVL'), (61200, 'AVL_TRAIN'), (61800, 'UN_AVL'), (62400, 'AVL_TRAIN'), (64200, 'UN_AVL'), (64800, 'AVL_TRAIN'), (68400, 'UN_AVL'), (69000, 'AVL_TRAIN'), (69600, 'UN_AVL'), (70200, 'AVL_TRAIN'), (70800, 'UN_AVL'), (71400, 'AVL_TRAIN'), (72600, 'UN_AVL'), (74400, 'AVL_TRAIN'), (76200, 'UN_AVL'), (76800, 'AVL_TRAIN'), (78000, 'UN_AVL'), (80400, 'AVL_TRAIN'), (81000, 'UN_AVL'), (81600, 'AVL_TRAIN'), (82800, 'UN_AVL'), (83400, 'AVL_TRAIN'), (84000, 'UN_AVL'), (85200, 'AVL_TRAIN'), (85800, 'UN_AVL')]"
    },
    "baseModel": {
        "name": "",
        "version": 1
    },
    "job": {
        "id": "622a358619ab59012eabeefb",
        "name": "cifar-10"
    },
    "registry": {
        "sort": "dummy",
        "uri": ""
    },
    "selector": {
        "sort": "fedbuff",
        "kwargs": {
            "c": 20,
            "aggGoal": 1
        }
    },
    "optimizer": {
        "sort": "fedavg",
        "kwargs": {}
    },
    "maxRunTime": 300,
    "realm": "default/us",
    "role": "trainer"
}